import { Connection } from "@mysten/sui.js";
import { WalletAdapter, WalletAdapterEvents } from "@mysten/wallet-adapter-base";
import { ReadonlyWalletAccount } from "@mysten/wallet-standard";
export declare class UnsafeBurnerWalletAdapter implements WalletAdapter {
    #private;
    name: string;
    icon: string;
    connecting: boolean;
    connected: boolean;
    constructor(network?: Connection);
    getAccounts(): Promise<ReadonlyWalletAccount[]>;
    signMessage: WalletAdapter["signMessage"];
    signTransactionBlock: WalletAdapter["signTransactionBlock"];
    signAndExecuteTransactionBlock: WalletAdapter["signAndExecuteTransactionBlock"];
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    on: <E extends keyof WalletAdapterEvents>(event: E, callback: WalletAdapterEvents[E]) => () => void;
}
