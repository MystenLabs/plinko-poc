{"version":3,"sources":["../src/index.ts","../src/detect.ts","../src/chains.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from \"@wallet-standard/core\";\n\nexport * from \"./features\";\nexport * from \"./detect\";\nexport * from \"./chains\";\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  StandardConnectFeature,\n  StandardDisconnectFeature,\n  StandardEventsFeature,\n  Wallet,\n  WalletWithFeatures,\n} from \"@wallet-standard/core\";\nimport { SuiFeatures } from \"./features\";\n\nexport type StandardWalletAdapterWallet = WalletWithFeatures<\n  StandardConnectFeature &\n    StandardEventsFeature &\n    SuiFeatures &\n    // Disconnect is an optional feature:\n    Partial<StandardDisconnectFeature>\n>;\n\n// These features are absolutely required for wallets to function in the Sui ecosystem.\n// Eventually, as wallets have more consistent support of features, we may want to extend this list.\nconst REQUIRED_FEATURES: (keyof StandardWalletAdapterWallet[\"features\"])[] = [\n  \"standard:connect\",\n  \"standard:events\",\n];\n\nexport function isStandardWalletAdapterCompatibleWallet(\n  wallet: Wallet,\n  features: string[] = []\n): wallet is StandardWalletAdapterWallet {\n  return [...REQUIRED_FEATURES, ...features].every(\n    (feature) => feature in wallet.features\n  );\n}\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/** Sui Devnet */\nexport const SUI_DEVNET_CHAIN = \"sui:devnet\";\n\n/** Sui Testnet */\nexport const SUI_TESTNET_CHAIN = \"sui:testnet\";\n\n/** Sui Localnet */\nexport const SUI_LOCALNET_CHAIN = \"sui:localnet\";\n\n/** Sui Mainnet */\nexport const SUI_MAINNET_CHAIN = \"sui:mainnet\";\n\nexport const SUI_CHAINS = [\n  SUI_DEVNET_CHAIN,\n  SUI_TESTNET_CHAIN,\n  SUI_LOCALNET_CHAIN,\n  SUI_MAINNET_CHAIN,\n] as const;\n\nexport type SuiChain =\n  | typeof SUI_DEVNET_CHAIN\n  | typeof SUI_TESTNET_CHAIN\n  | typeof SUI_LOCALNET_CHAIN\n  | typeof SUI_MAINNET_CHAIN;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,wBAAc,kCAHd;;;ACsBA,IAAM,oBAAuE;AAAA,EAC3E;AAAA,EACA;AACF;AAEO,SAAS,wCACd,QACA,WAAqB,CAAC,GACiB;AACvC,SAAO,CAAC,GAAG,mBAAmB,GAAG,QAAQ,EAAE;AAAA,IACzC,CAAC,YAAY,WAAW,OAAO;AAAA,EACjC;AACF;;;AC9BO,IAAM,mBAAmB;AAGzB,IAAM,oBAAoB;AAG1B,IAAM,qBAAqB;AAG3B,IAAM,oBAAoB;AAE1B,IAAM,aAAa;AAAA,EACxB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;","names":[]}