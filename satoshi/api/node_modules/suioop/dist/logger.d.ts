export declare enum Level {
    fatal = "fatal",
    error = "error",
    warn = "warn",
    info = "info",
    debug = "debug",
    trace = "trace",
    silent = "silent"
}
/**
 * Singleton class to handle logging
 */
declare class Logger {
    private static levelsTranslator;
    private static instance;
    private logger;
    private constructor();
    /**
     * Initialize the logger instance.
     * @param level {Level} - The minimum level to log.
     */
    static initialize(level?: Level): Logger;
    /**
     * Wrapper method for the logging-library's log function.
     * @param level {Level} - The level to log at.
     * @param msg {string} - The message regarding the log.
     * @param pool_id {string} - The pool id to log; Used for tracing.
     */
    log(level: Level | undefined, msg: string, pool_id?: string): void;
}
export declare const logger: Logger;
export {};
