import type { SuiClient } from '@mysten/sui.js/client';
/**
 * Checks if an object is "Immutable" by looking up its data on the blockchain.
 * @param objectId - The ID of the object to check.
 * @param client - The SuiClient instance to use for the API request.
 * @returns A Promise that resolves to a boolean indicating whether the object is owned by an "Immutable" owner.
 * @throws An error if the "owner" field of the object cannot be extracted.
 */
export declare function isImmutable(objectId: string, client: SuiClient): Promise<boolean>;
/**
 * Checks if the given object type is a coin.
 * Defaults to checking if the object type is a SUI (gas) coin.
 * @param objectType The object type to check.
 * @param ofType The expected object type.
 * @returns True if the object type is a coin, false otherwise.
 */
export declare function isCoin(objectType: string, ofType?: string): boolean;
